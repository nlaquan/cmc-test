{"version":3,"sources":["api/common/index.js","components/alert/index.js","page/Login.js","page/Home.js","App.js","serviceWorker.js","index.js"],"names":["apiCaller","axios","create","baseURL","validateStatus","status","FailAlert","header","message","onClick","className","role","xmlns","viewBox","d","UIAuthState","INIT_STATE","username","password","errorMessage","withRouter","history","useContext","StateContext","state","setState","useState","loginState","setLoginState","onChange","event","target","name","value","useEffect","user","setTimeout","push","onSubmit","preventDefault","post","then","res","Promise","reject","data","error","resolve","login","catch","htmlFor","type","placeholder","href","Home","result","array","fullArray","Array","from","_","i","map","reduce","acc","v","findout","arrayString","split","e","trim","filter","rows","readOnly","join","React","createContext","PrivateRoute","children","rest","render","location","to","pathname","App","path","Provider","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1b181221.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst apiCaller = axios.create({\n  baseURL: 'https://api-connect.io/',\n  validateStatus: function (status) {\n    return true;\n  },\n});\n\nfunction login({ username, password }) {\n  const path = 'id/user/login';\n\n  return apiCaller.post(path, { username, password })\n    .then((res) => {\n      switch (res.status) {\n        case 401:\n          return Promise.reject(res.data.error);\n        default:\n          return Promise.resolve(res.data);\n      }\n    })\n}\n\nexport {\n  login\n}\n","import React from 'react';\n\nfunction FailAlert({ header, message, onClick }) {\n  return (\n    <div className=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative\" role=\"alert\">\n      <strong className=\"font-bold\">{header} </strong>\n      <span className=\"block sm:inline\">{message}</span>\n      <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n        <svg\n          onClick={onClick}\n          className=\"fill-current h-6 w-6 text-red-500\"\n          role=\"button\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 20 20\">\n          <title>Close</title>\n          <path d=\"M14.348 14.849a1.2 1.2 0 0 1-1.697 0L10 11.819l-2.651 3.029a1.2 1.2 0 1 1-1.697-1.697l2.758-3.15-2.759-3.152a1.2 1.2 0 1 1 1.697-1.697L10 8.183l2.651-3.031a1.2 1.2 0 1 1 1.697 1.697l-2.758 3.152 2.758 3.15a1.2 1.2 0 0 1 0 1.698z\" />\n        </svg>\n      </span>\n    </div>\n  );\n}\n\nexport {\n  FailAlert\n}\n","import React, { useState, useEffect, useContext } from 'react';\nimport { login } from '../api/common';\nimport { withRouter } from \"react-router\";\nimport { FailAlert } from '../components/alert';\nimport { StateContext } from '../App';\n\nconst UIAuthState = {\n  LOADING: 'LOADING',\n  WAIT: 'WAIT'\n};\n\nconst INIT_STATE = {\n  username: '',\n  password: '',\n  status: UIAuthState.WAIT,\n  errorMessage: ''\n};\n\nfunction Login({ history }) {\n  const [state, setState] = useContext(StateContext);\n  const [loginState, setLoginState] = useState(INIT_STATE);\n\n  const { username, password } = loginState;\n\n  const onChange = (event) => {\n    const { name, value } = event.target;\n    setLoginState(state => ({ ...state, [name]: value }));\n  }\n\n  const onClick = () => {\n    setLoginState(state => ({\n      ...state,\n      status: UIAuthState.WAIT,\n      errorMessage: ''\n    }))\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    if (username && password) {\n      setLoginState(state => ({\n        ...state,\n        status: UIAuthState.LOADING,\n        errorMessage: '',\n      }));\n\n      login({ username, password })\n        .then(res => setState({ ...state, user: { ...res, username } }))\n        .catch(() => setLoginState({\n          ...loginState,\n          status: UIAuthState.WAIT,\n          errorMessage: 'Failed to login. Please check your username, password, then try again.'\n        }));\n    } else {\n      setLoginState(state => ({\n        ...state,\n        status: UIAuthState.WAIT,\n        errorMessage: 'Please fill out all the information above.'\n      }))\n    }\n  }\n\n  useEffect(() => {\n    if (state.user) {\n      setTimeout(() => history.push('/'), 2000);\n    }\n  }, [history, state.user]);\n\n  return (\n    <div className=\"container mx-auto\">\n      {\n        loginState.errorMessage\n        && <FailAlert\n          header={\"Holy smoke!!!\"}\n          message={loginState.errorMessage}\n          onClick={onClick}\n        />\n      }\n      {\n        state.user\n          ? <p>You have logged in. You will be redirected to Home page in few seconds</p>\n          : (\n            <div className=\"w-full mx-auto max-w-xs mt-8\">\n              <form\n                className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4\"\n                onSubmit={onSubmit}\n              >\n                <div className=\"mb-4\">\n                  <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"username\">\n                    Username\n                  </label>\n                  <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                    type=\"text\"\n                    placeholder=\"Username\"\n                    name=\"username\"\n                    value={username}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className=\"mb-6\">\n                  <label className=\"block text-gray-700 text-sm font-bold mb-2\" htmlFor=\"password\">\n                    Password\n                  </label>\n                  <input className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\n                    type=\"password\"\n                    name=\"password\"\n                    value={password}\n                    onChange={onChange}\n                  />\n                </div>\n                <div className=\"flex items-center justify-between\">\n                  <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n                    type=\"submit\"\n                  >\n                    Sign In\n                  </button>\n                  <a className=\"inline-block align-baseline font-bold text-sm text-blue-500 hover:text-blue-800\"\n                    href=\"#\"\n                  >\n                    Forgot Password?\n                  </a>\n                </div>\n              </form>\n              <p className=\"text-center text-gray-500 text-xs\">\n                &copy;2020 CMC Corp. All rights reserved.\n              </p>\n            </div>\n          )\n      }\n      {\n        loginState.status === UIAuthState.LOADING ? (\n          <div className=\"w-full h-full fixed block top-0 left-0 bg-white opacity-75 z-50\">\n            <span className=\"text-green-500 opacity-75 top-1/2 my-0 mx-auto block relative w-0 h-0 pt-40\">\n              <i className=\"fas fa-circle-notch fa-spin fa-2x\"/>\n            </span>\n          </div>\n        )\n          : null\n      }\n    </div>\n  );\n}\n\nexport default withRouter(Login);\n","import React, { useContext } from 'react';\nimport { StateContext } from '../App';\n\nfunction findout(array) {\n  const fullArray = Array.from(new Array(100), (_, i) => i + 1);\n  const map = fullArray.reduce((acc, i) => ({ ...acc, [i + 1]: false }), {});\n  for (let i of array) {\n    map[i] = true;\n  }\n\n  const result = fullArray.reduce((acc, v) => map[v] ? acc : [...acc, v], []);\n  return result;\n}\n\nfunction Home() {\n  const [state, setState] = useContext(StateContext);\n\n  const onChange = (event) => {\n    const { value } = event.target;\n    setState(state => ({ ...state, arrayString: value }));\n  }\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    const array = state.arrayString.split(',').map(e => e.trim()).filter(e => e !== '');\n    const result = findout(array);\n\n    setState(state => ({ ...state, result }))\n  }\n\n  return (\n    <div className=\"container mx-auto\">\n      <span className=\"text-gray-700 block mt-8 mb-4\">\n        Đề bài: Tìm số còn thiếu trong mảng từ 1 đến 100 được sắp xếp ngẫu nhiên\n      </span>\n\n      <div className=\"flex mb-4\">\n        <div className=\"w-1/2 h-12\">\n          <form onSubmit={onSubmit}>\n            <label className=\"block mb-8\">\n              <span className=\"text-gray-700\">Input</span>\n              <textarea\n                className=\"form-textarea mt-1 block w-full border-solid\"\n                rows=\"6\"\n                placeholder=\"Điền vào mảng đầu vào, các phần tử cách nhau bởi dấu ','\"\n                onChange={onChange}\n                value={state.arrayString}\n              />\n            </label>\n            <button className=\"bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n              type=\"submit\"\n            >\n              Find out\n            </button>\n          </form>\n        </div>\n        <div className=\"w-1/2 h-12\">\n          <span className=\"text-gray-700\">Output</span>\n          <textarea\n            className=\"form-textarea mt-1 block w-full border-solid\"\n            rows=\"6\"\n            placeholder=\"Điền vào mảng đầu ra, các phần tử cách nhau bởi dấu ','\"\n            readOnly\n            value={state.result.join(', ')}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React, { useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport Login from './page/Login';\nimport Home from './page/Home';\n\nexport const StateContext = React.createContext(null);\n\nconst INIT_STATE = {\n  user: null,\n  arrayString: '',\n  result: []\n}\n\nfunction PrivateRoute({ user, children, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        user\n          ? children\n          : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: location }\n              }}\n            />\n          )\n      }\n    />\n  );\n}\n\nfunction App() {\n  const [state, setState] = useState(INIT_STATE);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <StateContext.Provider value={[state, setState]}>\n            <Login />\n          </StateContext.Provider>\n        </Route>\n        <PrivateRoute exact path=\"/\" user={state.user}>\n          <StateContext.Provider value={[state, setState]}>\n            <Home />\n          </StateContext.Provider>\n        </PrivateRoute>\n      </Switch>\n    </Router >\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/tailwind.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}